// Battery voltage has millivolt precision.
MEMFAULT_METRICS_KEY_DEFINE_WITH_SCALE_VALUE(battery_v, kMemfaultMetricType_Unsigned, 1000)

// libc heap usage
MEMFAULT_METRICS_KEY_DEFINE_WITH_SCALE_VALUE(memory_pct_max, kMemfaultMetricType_Unsigned, 100)

#include "ports/freertos/config/memfault_metrics_heartbeat_freertos_config.def"

// LSM6DSO accelerometer diagnostics
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_last_x_mg, kMemfaultMetricType_Signed)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_last_y_mg, kMemfaultMetricType_Signed)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_last_z_mg, kMemfaultMetricType_Signed)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_sample_age_ms, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_read_age_ms, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_interrupt_age_ms, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_wake_age_ms, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_double_tap_age_ms, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_state_flags, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_i2c_error_count, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_consecutive_errors, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_interrupt_count, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_wake_events, kMemfaultMetricType_Unsigned)
MEMFAULT_METRICS_KEY_DEFINE(accel_lsm6dso_double_tap_events, kMemfaultMetricType_Unsigned)

// Number of times that the user has pressed the back button, and it would
// have caused a force quit but we realized that the KernelMain task had
// just gone out to lunch and the user didn't ask for that at all
// (FIRM-425).
MEMFAULT_METRICS_KEY_DEFINE(firm_425_back_button_long_presses_cancelled, kMemfaultMetricType_Unsigned)

///// Import old legacy PebbleOS metrics into Memfault. /////

// exports: #define ANALYTICS_METRIC_TABLE(MARKER, DEVICE, APP, UINT8, UINT16, UINT32, INT8, INT16, INT32)
#include "services/common/analytics/analytics_metric_table.h"

#define ENTRY1(name) // no memfault metric for name without type
#define ENTRY2(name, element_type) MEMFAULT_METRICS_KEY_DEFINE(name, element_type)
#define ENTRY3(name, element_type, num_elements) // no memfault metric for array

#define GET_MACRO(_1, _2, _3, NAME, ...) NAME
#define ENTRY(...) GET_MACRO(__VA_ARGS__, ENTRY3, ENTRY2, ENTRY1)(__VA_ARGS__)

// We don't support Memfault metrics for per-app launch yet -- that would be
// a 'session' analytic, whenever we're ready for that.
#define NOOP(...)

ANALYTICS_METRIC_TABLE(ENTRY /* marker */, ENTRY /* system */, NOOP /* app */,
  kMemfaultMetricType_Unsigned, kMemfaultMetricType_Unsigned, kMemfaultMetricType_Unsigned,
  kMemfaultMetricType_Signed, kMemfaultMetricType_Signed, kMemfaultMetricType_Signed)

#undef ENTRY
#undef GET_MACRO
#undef ENTRY1
#undef ENTRY2
#undef ENTRY3
#undef NOOP
